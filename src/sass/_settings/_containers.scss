// Styles for containers to enforce common textures among container elements

// Function for getting container-specific styles
@function container($style, $type: 'base') {
  @if map-has-key($containers-map, $style) {
    @return map-get(map-get($containers-map, $style), $type);
  }
}

:root {
  --g-box-shadow-shade-1: rgba(22, 22, 33, 0.1);
  --g-box-shadow-shade-2: rgba(22, 22, 33, 0.14);
  --g-box-shadow-shade-3: rgba(22, 22, 33, 0.18);
  --g-box-shadow-shade-4: rgba(22, 22, 33, 0.22);
  --g-box-shadow-shade-5: rgba(22, 22, 33, 0.26);
}

@include darkMode() {
  --g-box-shadow-shade-1: rgba(233, 233, 244, 0.1);
  --g-box-shadow-shade-2: rgba(233, 233, 244, 0.14);
  --g-box-shadow-shade-3: rgba(233, 233, 244, 0.18);
  --g-box-shadow-shade-4: rgba(233, 233, 244, 0.22);
  --g-box-shadow-shade-5: rgba(233, 233, 244, 0.26);
}

$containers-map: (
  border-radius: (
    small: spacing(1),
    base: spacing(2),
    large: spacing(),
    full: 999999999px,
    circle: 100%,
  ),
  box-shadow: (
    1: (
      0 0 spacing(1) var(--g-box-shadow-shade-1),
      0 0 spacing(1) var(--g-box-shadow-shade-4),
    ),
    2: (
      0 spacing(1) spacing(2) var(--g-box-shadow-shade-2),
      0 0 spacing(2) var(--g-box-shadow-shade-4),
    ),
    3: (
      0 spacing(2) spacing(6) var(--g-box-shadow-shade-3),
      0 0 spacing(6) var(--g-box-shadow-shade-4),
    ),
    4: (
      0 spacing() spacing(8) var(--g-box-shadow-shade-4),
      0 spacing(1) spacing(8) var(--g-box-shadow-shade-4),
    ),
    5: (
      0 spacing() spacing(12) var(--g-box-shadow-shade-5),
      0 spacing(2) spacing(12) var(--g-box-shadow-shade-4),
    ),
  ),
);
